<UserControl x:Class="Diffusion.Toolkit.Controls.ThumbnailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Diffusion.Toolkit.Controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:toolkit="clr-namespace:Diffusion.Toolkit"
             xmlns:converters="clr-namespace:Diffusion.Toolkit.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:InverseBoolToVisibilityCollapsedConverter x:Key="invBoolToVisCol"></converters:InverseBoolToVisibilityCollapsedConverter>
            <converters:BoolToVisibilityCollapsedConverter x:Key="boolToVisCol"></converters:BoolToVisibilityCollapsedConverter>
            <converters:InverseBoolToVisibilityConverter x:Key="invBoolToVis"></converters:InverseBoolToVisibilityConverter>
            <converters:IntToVisibilityConverter x:Key="intToVis"></converters:IntToVisibilityConverter>
            <converters:StringToVisibilityConverter x:Key="strToVis"></converters:StringToVisibilityConverter>
            <converters:BoolToBlurIntConverter x:Key="boolToBlur"></converters:BoolToBlurIntConverter>
            <converters:BoolToBlurIntMultiConverter x:Key="boolToBlurMulti"></converters:BoolToBlurIntMultiConverter>
            <converters:BoolToVisibilityConverter x:Key="boolToVis"></converters:BoolToVisibilityConverter>
            <converters:BoolToVisibilityMultiConverter x:Key="boolToVisMulti"></converters:BoolToVisibilityMultiConverter>
            <converters:InverseBoolToVisibilityMultiConverter x:Key="invBoolToVisMulti"></converters:InverseBoolToVisibilityMultiConverter>
            <converters:BoolToOpacityConverter x:Key="BoolToOpacity"></converters:BoolToOpacityConverter>
            <converters:FileEntryTypeVisibilityConverter x:Key="fileEntryTypeVis"></converters:FileEntryTypeVisibilityConverter>
            <converters:FolderEntryTypeVisibilityConverter x:Key="folderEntryTypeVis"></converters:FolderEntryTypeVisibilityConverter>
            <converters:AlbumEntryTypeVisibilityConverter x:Key="albumEntryTypeVis"></converters:AlbumEntryTypeVisibilityConverter>
            <converters:AlbumModeVisibilityConverter x:Key="albumModeVis"></converters:AlbumModeVisibilityConverter>
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid  DataContext="{Binding Path=Model, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Visibility="{Binding IsEmpty, Converter={StaticResource boolToVis}}" 
               Style="{StaticResource TitleText}"
               Content="{Binding ResultStatus}"
               VerticalContentAlignment="Center" 
               HorizontalContentAlignment="Center" 
        ></Label>

        <ListView Grid.Row="0" x:Name="ThumbnailListView" Margin="2" Padding="10" ItemsSource="{Binding Images}"
                  SelectionMode="Extended"
                  SelectedItem="{Binding SelectedImageEntry}" 
                  KeyDown="ThumbnailListView_OnKeyDown"
                  PreviewKeyDown="ThumbnailListView_OnPreviewKeyDown"
                  PreviewMouseLeftButtonDown="ThumbnailListView_OnPreviewMouseLeftButtonDown"
                  MouseDown="ThumbnailListView_OnMouseDown"
                  MouseMove="ThumbnailListView_OnMouseMove"
                  MouseDoubleClick="Control_OnMouseDoubleClick"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  Tag="{Binding Path=.}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.InputBindings>
                <KeyBinding Command="{Binding PrevPage}" Key="PageUp" Modifiers="Alt"  Gesture="ALT+PageUp"></KeyBinding>
                <KeyBinding Command="{Binding NextPage}"  Key="PageDown" Modifiers="Alt" Gesture="ALT+PageDown"></KeyBinding>
                <KeyBinding Command="{Binding FirstPage}"  Key="Home" Modifiers="Alt" Gesture="ALT+Home"></KeyBinding>
                <KeyBinding Command="{Binding LastPage}"  Key="End" Modifiers="Alt" Gesture="ALT+End"></KeyBinding>
                <KeyBinding Command="{Binding CopyFiles}" Key="C" Modifiers="Control"  Gesture="Control+C"></KeyBinding>
                <KeyBinding Command="{Binding Refresh}" Key="F5" Modifiers="Control"  Gesture="Control+F5"></KeyBinding>
                <KeyBinding Command="{Binding FocusSearch}" Key="F6" Gesture="F6"></KeyBinding>
                <KeyBinding Command="{Binding ToggleParameters}" Key="I"></KeyBinding>
            </ListView.InputBindings>
            <ListView.Template>
                <ControlTemplate >
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="Transparent">
                        <WrapPanel IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </ListView.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" Background="Transparent" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate  DataType="{x:Type toolkit:ImageEntry}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="5" BorderBrush="Transparent" BorderThickness="0" Visibility="{Binding EntryType, Converter={StaticResource folderEntryTypeVis}}"
                                Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Margin="12">
                            <fa:ImageAwesome Icon="FolderOutlinepenOutline"
                                             
                                             Foreground="{DynamicResource ForegroundBrush}" 
                                             Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                             MaxWidth="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" MaxHeight="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center"></fa:ImageAwesome>

                        </Border>

                        <Border CornerRadius="5" BorderBrush="Transparent" BorderThickness="0" Visibility="{Binding EntryType, Converter={StaticResource albumEntryTypeVis}}"
                                Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Margin="12" >
                            <fa:ImageAwesome Icon="FilePhotoOutline"
                                             
                                             Foreground="{DynamicResource ForegroundBrush}" 
                                             Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                             MaxWidth="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" MaxHeight="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center">
                                <fa:ImageAwesome.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Rename Album" Click="RenameAlbum_OnClick"></MenuItem>
                                        <MenuItem Header="Remove Album" Click="RemoveAlbum_OnClick"></MenuItem>
                                    </ContextMenu>
                                </fa:ImageAwesome.ContextMenu>

                            </fa:ImageAwesome>

                        </Border>

                        <Border CornerRadius="5" BorderBrush="LightGray" BorderThickness="2" Visibility="{Binding EntryType, Converter={StaticResource fileEntryTypeVis}}"
                                Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Margin="12" >
                            <Grid>
                                <local:Thumbnail 
                                    DataContext="{Binding .}"
                                    Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                    Source="{Binding Thumbnail, IsAsync = True}" 
                                    Opacity="{Binding Path=ForDeletion, Converter={StaticResource BoolToOpacity}}"
                                    Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                    MaxWidth="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" MaxHeight="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Top">

                                    <local:Thumbnail.ContextMenu>
                                        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem ItemsSource="{Binding AlbumMenuItems}" x:Name="AlbumMenu" Header="Add to _Album">
                                                <!--<MenuItem Header="_New Album" Click="CreateAlbum_OnClick"></MenuItem>
                                                <Separator></Separator>-->
                                            </MenuItem>
                                            <MenuItem Visibility="{Binding ViewMode, Converter={StaticResource albumModeVis}}" Header="_Remove from Album" Click="RemoveFromAlbum_OnClick"></MenuItem>
                                            <Separator />
                                            <MenuItem Header="Favorite (F)" ToolTip="F" InputGestureText="F" Command="{Binding FavoriteCommand}"/>
                                            <MenuItem Header="Rate">
                                                <MenuItem Header="1" Command="{Binding RatingCommand}" CommandParameter="1"></MenuItem>
                                                <MenuItem Header="2" Command="{Binding RatingCommand}" CommandParameter="2"></MenuItem>
                                                <MenuItem Header="3" Command="{Binding RatingCommand}" CommandParameter="3"></MenuItem>
                                                <MenuItem Header="4" Command="{Binding RatingCommand}" CommandParameter="4"></MenuItem>
                                                <MenuItem Header="5" Command="{Binding RatingCommand}" CommandParameter="5"></MenuItem>
                                                <MenuItem Header="6" Command="{Binding RatingCommand}" CommandParameter="6"></MenuItem>
                                                <MenuItem Header="7" Command="{Binding RatingCommand}" CommandParameter="7"></MenuItem>
                                                <MenuItem Header="8" Command="{Binding RatingCommand}" CommandParameter="8"></MenuItem>
                                                <MenuItem Header="9" Command="{Binding RatingCommand}" CommandParameter="9"></MenuItem>
                                                <MenuItem Header="10" Command="{Binding RatingCommand}" CommandParameter="10"></MenuItem>
                                                <Separator></Separator>
                                                <MenuItem Header="Remove rating" Click="Unrate_OnClick"></MenuItem>
                                            </MenuItem>
                                            <MenuItem Header="NSFW (N)" ToolTip="N" InputGestureText="N" Command="{Binding NSFWCommand}"/>
                                            <Separator />
                                            <MenuItem Header="Copy prompt"  Command="{Binding CopyPromptCommand}"/>
                                            <MenuItem Header="Copy negative prompt"  Command="{Binding CopyNegativePromptCommand}"/>
                                            <MenuItem Header="Copy seed"  Command="{Binding CopySeedCommand}"/>
                                            <MenuItem Header="Copy hash"  Command="{Binding CopyHashCommand}"/>
                                            <MenuItem Header="Copy all parameters"  Command="{Binding CopyParametersCommand}"/>
                                            <Separator />
                                            <MenuItem Header="Move"  Command="{Binding MoveCommand}"/>
                                            <Separator />
                                            <MenuItem Header="Show in explorer"  Command="{Binding ShowInExplorerCommand}"/>
                                            <!--<Separator />
                                            <MenuItem Header="Add to Album" />
                                            <MenuItem Header="Remove from Album" />-->
                                            <Separator />
                                            <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource invBoolToVisCol}}" Header="Send to Trash (X/Del)" ToolTip="Del" Command="{Binding DeleteCommand}"/>
                                            <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource boolToVisCol}}" Header="Restore (X/Del)" ToolTip="Del" Command="{Binding DeleteCommand}"/>
                                            <MenuItem Header="Remove Entry (CTRL+X/Del)"  Command="{Binding RemoveEntryCommand}"/>
                                        </ContextMenu>
                                    </local:Thumbnail.ContextMenu>
                                    <local:Thumbnail.Effect>
                                        <BlurEffect  KernelType="Gaussian">
                                            <BlurEffect.Radius>
                                                <MultiBinding Converter="{StaticResource boolToBlurMulti}" ConverterParameter="20">
                                                    <Binding Path="NSFW"></Binding>
                                                    <Binding ElementName="ThumbnailListView" Path="DataContext.NSFWBlur" ></Binding>
                                                </MultiBinding>
                                            </BlurEffect.Radius>
                                        </BlurEffect>
                                    </local:Thumbnail.Effect>
                                </local:Thumbnail>
                                <!--Margin="96,96,0,0"-->
                                <Grid Background="{x:Null}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="32"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                                        <Image IsHitTestVisible="False" Height="24" Width="24" Source="../Icons/blue-heart-32.png" Visibility="{Binding Favorite, Converter={StaticResource boolToVisCol}}">
                                            <Image.Effect>
                                                <DropShadowEffect BlurRadius="3" Opacity="0.8"  ShadowDepth="4" Direction="-90" RenderingBias="Quality" />
                                            </Image.Effect>
                                        </Image>
                                        <Grid Background="Transparent" Visibility="{Binding Rating, Converter={StaticResource intToVis}, ConverterParameter=1}">
                                            <Image IsHitTestVisible="False" Height="24" Width="24" Source="../Icons/star-32.png">
                                                <Image.Effect>
                                                    <DropShadowEffect BlurRadius="3" Opacity="0.8"  ShadowDepth="4" Direction="-90" RenderingBias="Quality" />
                                                </Image.Effect>
                                            </Image>
                                            <Label FontWeight="Bold" IsHitTestVisible="False" Height="24" Width="24"  Content="{Binding Rating}" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding}"
                                                                               Foreground="Black" />
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Label.Style>
                                                <!--<Label.Effect>
                                                <DropShadowEffect BlurRadius="2" Opacity="0.8"  ShadowDepth="1" Direction="-90" RenderingBias="Quality" />
                                            </Label.Effect>-->
                                            </Label>
                                        </Grid>
                                        <Border  Visibility="{Binding Score, Converter={StaticResource strToVis}}" CornerRadius="5" Background="Black" Opacity="0.75" >
                                            <Label  FontWeight="Bold" IsHitTestVisible="False" Height="24"  Content="{Binding Score}" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding}"
                                                                               Foreground="White" />
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </Border>
                                    </StackPanel>
                                </Grid>

                                <!--<Image IsHitTestVisible="False" Height="32" Width="32" Source="../Icons/x-mark-32.png" Visibility="{Binding ForDeletion, Converter={StaticResource boolToVis}}"/>-->
                            </Grid>
                        </Border>
                        <Label Grid.Row="1" HorizontalContentAlignment="Center" Content="{Binding Name}">
                        </Label>
                    </Grid>

                    <!--<DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=(toolkit:MyScrollViewer.IsInViewport), RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                         Value="True">
                                <Setter TargetName="Thumbnail" Property="Source" Value="{Binding Thumbnail}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>-->
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0"  
                         VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" 
                         VerticalContentAlignment="Center"
                         Content="{Binding Results}"
                ></Label>
            <StackPanel Grid.Column="1"   Orientation="Horizontal">
                <Button Style="{DynamicResource BorderlessButton}" Width="16" IsEnabled="{Binding FirstPageEnabled}" ToolTip="ALT+Home" Click="FirstPage_OnClick">|&lt;</Button>
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding PrevPageEnabled}" ToolTip="ALT+PageUp" Click="PrevPage_OnClick">&lt;&lt;</Button>
                <TextBox  
                        MinWidth="30"
                             VerticalAlignment="Stretch" 
                             HorizontalAlignment="Stretch" 
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             KeyDown="Page_OnKeyDown"
                             Text="{Binding Page, UpdateSourceTrigger=PropertyChanged}"
                    ></TextBox>
                <Label
                           VerticalAlignment="Stretch" 
                           HorizontalAlignment="Stretch" 
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="of"
                    ></Label>
                <Label   
                            MinWidth="30"
                           VerticalAlignment="Stretch" 
                           HorizontalAlignment="Stretch" 
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="{Binding Pages}"
                    ></Label>
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding NextPageEnabled}" ToolTip="ALT+PageDown" Click="NextPage_OnClick">&gt;&gt;</Button>
                <Button Style="{DynamicResource BorderlessButton}" Width="16" IsEnabled="{Binding LastPageEnabled}" ToolTip="ALT+End" Click="LastPage_OnClick">&gt;|</Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
